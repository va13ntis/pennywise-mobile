{
  "meta": {
    "project": "PennyWise",
    "date": "2025-09-13",
    "prepared_by": "Senior Android Developer"
  },
  "product_overview": "PennyWise is a native Android personal expense and budget management app designed for offline-first usage. It employs Jetpack Compose for UI, uses Room for local SQLite data storage, and supports multi-language including RTL Hebrew. The app offers secure user authentication with biometric support, transaction and currency management, customizable user settings, and a home dashboard with transaction summaries and charts.",
  "core_goals": [
    "Provide a secure and streamlined personal finance management tool fully functional offline",
    "Enable users to track income, expenses, and budgets with detailed transaction management including recurring expenses",
    "Support multi-currency operations with seamless currency conversion and formatting",
    "Facilitate a personalized user experience through theme preferences, localization (English, Hebrew RTL, Russian), and biometric authentication",
    "Structure the app for future extensibility including cloud backup and synchronization capabilities"
  ],
  "key_features": [
    "User Authentication with registration, login, and biometric authentication support",
    "Comprehensive Transaction Management supporting create, read, update, delete operations with categories and recurring expense handling",
    "Multi-Currency Support with live rates, currency conversion, and proper formatting",
    "Settings Management for user preferences including theme, locale, and biometric enablement",
    "Home Dashboard providing monthly transaction summaries, weekly grouped views with collapsible recurring expenses pinned at the top",
    "Full localization support with RTL layout handling for Hebrew and resource string management",
    "Clean Architecture based on MVVM pattern with well-separated layers and modular folder structure (ui, data, model, viewmodel, repository)"
  ],
  "user_flow_summary": [
    "User opens the app and lands on the Login screen or is automatically authenticated via biometric login if enabled",
    "New users can register providing username, password, and email, then log in",
    "Once logged in, user arrives at the Home screen displaying the current month's summary of their financial transactions grouped by week, with recurring transactions pinned and collapsed",
    "User can navigate to New Expense screen to add detailed expenses with date, merchant, amount, payment type, and notes",
    "In the Settings screen, users update preferences including theme, locale (English, Hebrew, Russian), and biometric authentication toggle",
    "Transactions are stored locally in Room database with queries filtered by userId, date ranges, and recurrence status",
    "Currency management allows selection and conversion between supported currencies reflecting user preferences"
  ],
  "validation_criteria": [
    "Successful user registration, login, and biometric authentication with secure session management",
    "Correct CRUD operations on transactions with accurate filtering by date, user, and recurring status confirmed through Room database",
    "Accurate currency conversions and formatting matching external currency APIs",
    "Proper theme switching and localization applied including RTL layout adjustment for Hebrew",
    "App UI follows Material 3 guidelines and is responsive across different devices",
    "Unit and integration tests covering core logic using JUnit5, Espresso, MockK, and Robolectric",
    "Offline functionality fully operational with all data persisted locally and no crashes on loss of network"
  ],
  "code_summary": {
    "tech_stack": [
      "Kotlin",
      "Android",
      "Jetpack Compose",
      "Room Database",
      "Hilt Dependency Injection",
      "Retrofit",
      "DataStore Preferences",
      "Biometric Authentication",
      "JUnit 5",
      "Espresso",
      "MockK",
      "Robolectric"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "User registration, login, and authentication management with biometric support",
        "files": [
          "app/src/main/java/com/pennywise/app/presentation/screens/LoginScreen.kt",
          "app/src/main/java/com/pennywise/app/presentation/screens/RegisterScreen.kt",
          "app/src/main/java/com/pennywise/app/presentation/viewmodel/LoginViewModel.kt",
          "app/src/main/java/com/pennywise/app/presentation/viewmodel/RegisterViewModel.kt",
          "app/src/main/java/com/pennywise/app/presentation/viewmodel/AuthViewModel.kt",
          "app/src/main/java/com/pennywise/app/presentation/auth/AuthManager.kt",
          "app/src/main/java/com/pennywise/app/presentation/auth/BiometricAuthManager.kt",
          "app/src/main/java/com/pennywise/app/domain/model/User.kt"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "User Authentication API",
            "version": "1.0.0",
            "description": "Authentication endpoints for user registration, login, and session management"
          },
          "paths": {
            "/auth/register": {
              "post": {
                "summary": "Register a new user",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "User registered successfully"
                  },
                  "400": {
                    "description": "Invalid input or user already exists"
                  }
                }
              }
            },
            "/auth/login": {
              "post": {
                "summary": "Authenticate user",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "username",
                          "password"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Login successful"
                  },
                  "401": {
                    "description": "Invalid credentials"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Transaction Management",
        "description": "Create, read, update, and delete financial transactions with categories and recurring support",
        "files": [
          "app/src/main/java/com/pennywise/app/presentation/screens/AddExpenseScreen.kt",
          "app/src/main/java/com/pennywise/app/presentation/viewmodel/AddExpenseViewModel.kt",
          "app/src/main/java/com/pennywise/app/data/repository/TransactionRepositoryImpl.kt",
          "app/src/main/java/com/pennywise/app/data/local/dao/TransactionDao.kt",
          "app/src/main/java/com/pennywise/app/domain/model/Transaction.kt",
          "app/src/main/java/com/pennywise/app/domain/model/PaymentMethod.kt"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Transaction Management API",
            "version": "1.0.0",
            "description": "CRUD operations for financial transactions"
          },
          "paths": {
            "/transactions": {
              "get": {
                "summary": "Get user transactions",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "startDate",
                    "in": "query",
                    "schema": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  {
                    "name": "endDate",
                    "in": "query",
                    "schema": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  {
                    "name": "category",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "in": "query",
                    "schema": {
                      "type": "string",
                      "enum": [
                        "INCOME",
                        "EXPENSE"
                      ]
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of transactions"
                  }
                }
              },
              "post": {
                "summary": "Create a new transaction",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "integer"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "INCOME",
                              "EXPENSE"
                            ]
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "isRecurring": {
                            "type": "boolean"
                          },
                          "paymentMethod": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId",
                          "amount",
                          "description",
                          "category",
                          "type",
                          "date"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Transaction created successfully"
                  },
                  "400": {
                    "description": "Invalid transaction data"
                  }
                }
              }
            },
            "/transactions/{id}": {
              "put": {
                "summary": "Update a transaction",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Transaction updated successfully"
                  },
                  "404": {
                    "description": "Transaction not found"
                  }
                }
              },
              "delete": {
                "summary": "Delete a transaction",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "204": {
                    "description": "Transaction deleted successfully"
                  },
                  "404": {
                    "description": "Transaction not found"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Currency Management",
        "description": "Multi-currency support with conversion rates and currency formatting",
        "files": [
          "app/src/main/java/com/pennywise/app/domain/model/Currency.kt",
          "app/src/main/java/com/pennywise/app/domain/model/CurrencyUsage.kt",
          "app/src/main/java/com/pennywise/app/data/api/CurrencyApi.kt",
          "app/src/main/java/com/pennywise/app/data/service/CurrencyConversionService.kt",
          "app/src/main/java/com/pennywise/app/data/repository/CurrencyUsageRepositoryImpl.kt",
          "app/src/main/java/com/pennywise/app/presentation/util/CurrencyFormatter.kt"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Currency Management API",
            "version": "1.0.0",
            "description": "Currency conversion and formatting services"
          },
          "paths": {
            "/currencies": {
              "get": {
                "summary": "Get supported currencies",
                "responses": {
                  "200": {
                    "description": "List of supported currencies"
                  }
                }
              }
            },
            "/currencies/convert": {
              "post": {
                "summary": "Convert amount between currencies",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "amount": {
                            "type": "number"
                          },
                          "fromCurrency": {
                            "type": "string"
                          },
                          "toCurrency": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "amount",
                          "fromCurrency",
                          "toCurrency"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Conversion result"
                  },
                  "400": {
                    "description": "Invalid currency codes"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Settings Management",
        "description": "User preferences, theme settings, and app configuration",
        "files": [
          "app/src/main/java/com/pennywise/app/presentation/screens/SettingsScreen.kt",
          "app/src/main/java/com/pennywise/app/presentation/theme/ThemeManager.kt",
          "app/src/main/java/com/pennywise/app/presentation/util/LocaleManager.kt",
          "app/src/main/java/com/pennywise/app/data/util/SettingsDataStore.kt"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Settings Management API",
            "version": "1.0.0",
            "description": "User settings and preferences management"
          },
          "paths": {
            "/settings": {
              "get": {
                "summary": "Get user settings",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "User settings"
                  }
                }
              },
              "put": {
                "summary": "Update user settings",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "defaultCurrency": {
                            "type": "string"
                          },
                          "locale": {
                            "type": "string"
                          },
                          "theme": {
                            "type": "string",
                            "enum": [
                              "LIGHT",
                              "DARK",
                              "SYSTEM"
                            ]
                          },
                          "biometricEnabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Settings updated successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Home Dashboard",
        "description": "Main dashboard showing transaction summaries, charts, and quick actions",
        "files": [
          "app/src/main/java/com/pennywise/app/presentation/screens/HomeScreen.kt",
          "app/src/main/java/com/pennywise/app/presentation/viewmodel/HomeViewModel.kt"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Home Dashboard API",
            "version": "1.0.0",
            "description": "Dashboard data and analytics"
          },
          "paths": {
            "/dashboard": {
              "get": {
                "summary": "Get dashboard data",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Dashboard summary data"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
