# Task ID: 4
# Title: Implement Currency Enum and Utilities
# Status: done
# Dependencies: None
# Priority: high
# Description: Create a Currency enum class with all supported currencies and utility functions for currency operations.
# Details:
Implement the Currency enum as specified in the PRD with code, symbol, name, and popularity fields. Add utility functions for currency validation, formatting, and sorting.

Code example:
```kotlin
enum class Currency(val code: String, val symbol: String, val name: String, val popularity: Int) {
    USD("USD", "$", "US Dollar", 1),
    EUR("EUR", "â‚¬", "Euro", 2),
    // ... other currencies as specified in the PRD
    ;
    
    companion object {
        fun fromCode(code: String): Currency? = values().find { it.code == code }
        fun getDefault(): Currency = USD
        fun getAllSorted(): List<Currency> = values().sortedBy { it.popularity }
        fun isValid(code: String): Boolean = values().any { it.code == code }
    }
}
```

Implement utility functions for:
1. Currency formatting based on locale (using java.text.NumberFormat)
2. Handling different decimal places for different currencies
3. Sorting currencies by popularity or alphabetically
4. Getting currency symbol from code

Consider using the latest androidx.core:core-ktx library (currently 1.12.0) for Kotlin extensions.

# Test Strategy:
Write unit tests to verify that:
1. All specified currencies are included in the enum
2. Currency lookup by code works correctly
3. Currency validation works for valid and invalid codes
4. Formatting functions correctly handle different currencies
5. Sorting functions work as expected
6. Symbol and name retrieval works correctly
