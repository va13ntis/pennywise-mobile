name: Nightly Build

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  # Comprehensive nightly testing
  nightly-tests:
    name: Nightly Comprehensive Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run all unit tests
      run: ./gradlew testDebugUnitTest --continue
      
    - name: Run all integration tests
      run: ./gradlew testDebugUnitTest --tests "*IntegrationTest*" --continue
      
    - name: Run all performance tests
      run: ./gradlew testDebugUnitTest --tests "*PerformanceTest*" --continue
      
    - name: Run all load tests
      run: ./gradlew testDebugUnitTest --tests "*LoadTest*" --continue
      
    - name: Generate comprehensive test coverage
      run: ./gradlew jacocoTestReport
      
    - name: Generate currency-specific coverage
      run: ./gradlew jacocoCurrencyCoverageReport
      
    - name: Upload comprehensive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: nightly-test-results-${{ github.run_number }}
        path: |
          app/build/reports/tests/
          app/build/reports/jacoco/
        retention-days: 30
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: success()
      with:
        file: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
        flags: nightly
        name: nightly-coverage

  # Security and dependency checks
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Check for dependency vulnerabilities
      run: ./gradlew dependencyCheckAnalyze || echo "Dependency check plugin not configured"
      
    - name: Run security tests
      run: ./gradlew testDebugUnitTest --tests "*SecurityTest*" || echo "No security tests found"

  # Performance benchmarking
  performance-benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run performance benchmarks
      run: ./gradlew testDebugUnitTest --tests "*PerformanceTest*" --continue
      
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-benchmark-${{ github.run_number }}
        path: app/build/reports/tests/testDebugUnitTest/
        retention-days: 30

  # Generate nightly report
  nightly-report:
    name: Generate Nightly Report
    runs-on: ubuntu-latest
    needs: [nightly-tests, security-checks, performance-benchmark]
    if: always()
    
    steps:
    - name: Generate nightly report
      run: |
        echo "# 🌙 Nightly Build Report - $(date)" >> nightly-report.md
        echo "" >> nightly-report.md
        echo "## Test Results" >> nightly-report.md
        echo "- **Comprehensive Tests:** ${{ needs.nightly-tests.result }}" >> nightly-report.md
        echo "- **Security Checks:** ${{ needs.security-checks.result }}" >> nightly-report.md
        echo "- **Performance Benchmark:** ${{ needs.performance-benchmark.result }}" >> nightly-report.md
        echo "" >> nightly-report.md
        echo "## Summary" >> nightly-report.md
        if [[ "${{ needs.nightly-tests.result }}" == "success" && "${{ needs.security-checks.result }}" == "success" && "${{ needs.performance-benchmark.result }}" == "success" ]]; then
          echo "✅ All nightly checks passed successfully!" >> nightly-report.md
        else
          echo "❌ Some nightly checks failed. Please review the results." >> nightly-report.md
        fi
        
    - name: Upload nightly report
      uses: actions/upload-artifact@v4
      with:
        name: nightly-report-${{ github.run_number }}
        path: nightly-report.md
        retention-days: 30
