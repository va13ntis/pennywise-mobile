name: Test Reporting

on:
  workflow_run:
    workflows: ["CI/CD Pipeline", "Nightly Build"]
    types: [completed]

jobs:
  # Generate test reports and visualizations
  test-reporting:
    name: Generate Test Reports
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download test artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.payload.workflow_run.id,
          });
          
          for (const artifact of artifacts.data.artifacts) {
            if (artifact.name.includes('test-results') || artifact.name.includes('coverage')) {
              const download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });
              
              const fs = require('fs');
              const path = require('path');
              
              // Create directory for artifacts
              const artifactDir = `artifacts/${artifact.name}`;
              if (!fs.existsSync(artifactDir)) {
                fs.mkdirSync(artifactDir, { recursive: true });
              }
              
              // Write artifact data
              fs.writeFileSync(`${artifactDir}/${artifact.name}.zip`, Buffer.from(download.data));
            }
          }
          
    - name: Generate test summary
      run: |
        echo "# üìä Test Summary Report" > test-summary.md
        echo "" >> test-summary.md
        echo "## Workflow Information" >> test-summary.md
        echo "- **Workflow:** ${{ github.event.workflow_run.name }}" >> test-summary.md
        echo "- **Run ID:** ${{ github.event.workflow_run.id }}" >> test-summary.md
        echo "- **Status:** ${{ github.event.workflow_run.conclusion }}" >> test-summary.md
        echo "- **Triggered by:** ${{ github.event.workflow_run.head_commit.message }}" >> test-summary.md
        echo "" >> test-summary.md
        
        # Check for test result files
        if [ -d "artifacts" ]; then
          echo "## Available Test Artifacts" >> test-summary.md
          find artifacts -name "*.html" -o -name "*.xml" | while read file; do
            echo "- \`$file\`" >> test-summary.md
          done
        fi
        
        echo "" >> test-summary.md
        echo "## Test Coverage Summary" >> test-summary.md
        echo "Test coverage reports are available in the artifacts section." >> test-summary.md
        echo "" >> test-summary.md
        echo "---" >> test-summary.md
        echo "*Generated by GitHub Actions Test Reporting*" >> test-summary.md
        
    - name: Create test visualization
      run: |
        # Create a simple HTML report
        cat > test-visualization.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Test Results Visualization</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; }
                .header { background-color: #f0f0f0; padding: 20px; border-radius: 5px; }
                .success { color: #28a745; }
                .failure { color: #dc3545; }
                .warning { color: #ffc107; }
                .artifact-list { background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0; }
                .artifact-item { margin: 10px 0; padding: 10px; background-color: white; border-radius: 3px; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üß™ Test Results Dashboard</h1>
                <p><strong>Workflow:</strong> ${{ github.event.workflow_run.name }}</p>
                <p><strong>Status:</strong> <span class="${{ github.event.workflow_run.conclusion == 'success' && 'success' || 'failure' }}">${{ github.event.workflow_run.conclusion }}</span></p>
                <p><strong>Run ID:</strong> ${{ github.event.workflow_run.id }}</p>
            </div>
            
            <div class="artifact-list">
                <h2>üìÅ Test Artifacts</h2>
                <div class="artifact-item">
                    <h3>Unit Test Results</h3>
                    <p>Comprehensive unit test results for currency-related functionality</p>
                </div>
                <div class="artifact-item">
                    <h3>Integration Test Results</h3>
                    <p>Database and service integration test results</p>
                </div>
                <div class="artifact-item">
                    <h3>UI Test Results</h3>
                    <p>Espresso-based UI test results</p>
                </div>
                <div class="artifact-item">
                    <h3>Performance Test Results</h3>
                    <p>Performance benchmark and load test results</p>
                </div>
                <div class="artifact-item">
                    <h3>Accessibility Test Results</h3>
                    <p>Accessibility compliance test results</p>
                </div>
                <div class="artifact-item">
                    <h3>Coverage Reports</h3>
                    <p>JaCoCo test coverage reports (HTML and XML formats)</p>
                </div>
            </div>
            
            <div class="artifact-list">
                <h2>üìà Coverage Summary</h2>
                <p>Test coverage reports are generated for:</p>
                <ul>
                    <li>Overall project coverage</li>
                    <li>Currency-specific functionality coverage</li>
                    <li>Unit test coverage</li>
                    <li>Integration test coverage</li>
                </ul>
            </div>
        </body>
        </html>
        EOF
        
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ github.event.workflow_run.id }}
        path: |
          test-summary.md
          test-visualization.html
        retention-days: 30
        
    - name: Comment on PR with test results (if applicable)
      if: github.event.workflow_run.pull_requests && github.event.workflow_run.pull_requests.length > 0
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.workflow_run.pull_requests[0];
          const status = context.payload.workflow_run.conclusion;
          const workflowName = context.payload.workflow_run.name;
          
          const statusEmoji = status === 'success' ? '‚úÖ' : '‚ùå';
          const statusText = status === 'success' ? 'passed' : 'failed';
          
          const comment = `## ${statusEmoji} Test Results for ${workflowName}
          
          **Status:** ${statusText}
          **Workflow Run:** [#${context.payload.workflow_run.id}](${context.payload.workflow_run.html_url})
          
          ### üìä Available Reports
          - Unit test results
          - Integration test results  
          - UI test results
          - Performance test results
          - Accessibility test results
          - Test coverage reports
          
          All test artifacts are available in the workflow run artifacts section.
          
          ---
          *Generated by GitHub Actions Test Reporting*`;
          
          github.rest.issues.createComment({
            issue_number: pr.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
